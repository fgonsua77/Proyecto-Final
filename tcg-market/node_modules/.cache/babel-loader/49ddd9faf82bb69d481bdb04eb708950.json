{"ast":null,"code":"import * as BT from \"./cardTypes\";\nimport axios from \"axios\";\nexport const saveBook = book => {\n  return dispatch => {\n    dispatch({\n      type: BT.SAVE_BOOK_REQUEST\n    });\n    axios.post(\"http://localhost:8081/rest/books\", book).then(response => {\n      dispatch(bookSuccess(response.data));\n    }).catch(error => {\n      dispatch(bookFailure(error));\n    });\n  };\n};\nexport const fetchBook = bookId => {\n  return dispatch => {\n    dispatch({\n      type: BT.FETCH_BOOK_REQUEST\n    });\n    axios.get(\"http://localhost:8081/rest/books/\" + bookId).then(response => {\n      dispatch(bookSuccess(response.data));\n    }).catch(error => {\n      dispatch(bookFailure(error));\n    });\n  };\n};\nexport const updateBook = book => {\n  return dispatch => {\n    dispatch({\n      type: BT.UPDATE_BOOK_REQUEST\n    });\n    axios.put(\"http://localhost:8081/rest/books\", book).then(response => {\n      dispatch(bookSuccess(response.data));\n    }).catch(error => {\n      dispatch(bookFailure(error));\n    });\n  };\n};\nexport const deleteBook = bookId => {\n  return dispatch => {\n    dispatch({\n      type: BT.DELETE_BOOK_REQUEST\n    });\n    axios.delete(\"http://localhost:8081/rest/books/\" + bookId).then(response => {\n      dispatch(bookSuccess(response.data));\n    }).catch(error => {\n      dispatch(bookFailure(error));\n    });\n  };\n};\n\nconst bookSuccess = book => {\n  return {\n    type: BT.BOOK_SUCCESS,\n    payload: book\n  };\n};\n\nconst bookFailure = error => {\n  return {\n    type: BT.BOOK_FAILURE,\n    payload: error\n  };\n};\n\nexport const fetchLanguages = () => {\n  return dispatch => {\n    dispatch({\n      type: BT.FETCH_LANGUAGES_REQUEST\n    });\n    axios.get(\"http://localhost:8081/rest/books/languages\").then(response => {\n      dispatch({\n        type: BT.LANGUAGES_SUCCESS,\n        payload: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: BT.LANGUAGES_FAILURE,\n        payload: error\n      });\n    });\n  };\n};\nexport const fetchGenres = () => {\n  return dispatch => {\n    dispatch({\n      type: BT.FETCH_GENRES_REQUEST\n    });\n    axios.get(\"http://localhost:8081/rest/books/genres\").then(response => {\n      dispatch({\n        type: BT.GENRES_SUCCESS,\n        payload: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: BT.GENRES_FAILURE,\n        payload: error\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Morphem/Documents/Proyecto-Final/tcg-market/src/Services/card/cardActions.js"],"names":["BT","axios","saveBook","book","dispatch","type","SAVE_BOOK_REQUEST","post","then","response","bookSuccess","data","catch","error","bookFailure","fetchBook","bookId","FETCH_BOOK_REQUEST","get","updateBook","UPDATE_BOOK_REQUEST","put","deleteBook","DELETE_BOOK_REQUEST","delete","BOOK_SUCCESS","payload","BOOK_FAILURE","fetchLanguages","FETCH_LANGUAGES_REQUEST","LANGUAGES_SUCCESS","LANGUAGES_FAILURE","fetchGenres","FETCH_GENRES_REQUEST","GENRES_SUCCESS","GENRES_FAILURE"],"mappings":"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","sourcesContent":["import * as BT from \"./cardTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const saveBook = (book) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: BT.SAVE_BOOK_REQUEST,\r\n    });\r\n    axios\r\n      .post(\"http://localhost:8081/rest/books\", book)\r\n      .then((response) => {\r\n        dispatch(bookSuccess(response.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(bookFailure(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchBook = (bookId) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: BT.FETCH_BOOK_REQUEST,\r\n    });\r\n    axios\r\n      .get(\"http://localhost:8081/rest/books/\" + bookId)\r\n      .then((response) => {\r\n        dispatch(bookSuccess(response.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(bookFailure(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateBook = (book) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: BT.UPDATE_BOOK_REQUEST,\r\n    });\r\n    axios\r\n      .put(\"http://localhost:8081/rest/books\", book)\r\n      .then((response) => {\r\n        dispatch(bookSuccess(response.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(bookFailure(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteBook = (bookId) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: BT.DELETE_BOOK_REQUEST,\r\n    });\r\n    axios\r\n      .delete(\"http://localhost:8081/rest/books/\" + bookId)\r\n      .then((response) => {\r\n        dispatch(bookSuccess(response.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(bookFailure(error));\r\n      });\r\n  };\r\n};\r\n\r\nconst bookSuccess = (book) => {\r\n  return {\r\n    type: BT.BOOK_SUCCESS,\r\n    payload: book,\r\n  };\r\n};\r\n\r\nconst bookFailure = (error) => {\r\n  return {\r\n    type: BT.BOOK_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const fetchLanguages = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: BT.FETCH_LANGUAGES_REQUEST,\r\n    });\r\n    axios\r\n      .get(\"http://localhost:8081/rest/books/languages\")\r\n      .then((response) => {\r\n        dispatch({\r\n          type: BT.LANGUAGES_SUCCESS,\r\n          payload: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: BT.LANGUAGES_FAILURE,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchGenres = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: BT.FETCH_GENRES_REQUEST,\r\n    });\r\n    axios\r\n      .get(\"http://localhost:8081/rest/books/genres\")\r\n      .then((response) => {\r\n        dispatch({\r\n          type: BT.GENRES_SUCCESS,\r\n          payload: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: BT.GENRES_FAILURE,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}