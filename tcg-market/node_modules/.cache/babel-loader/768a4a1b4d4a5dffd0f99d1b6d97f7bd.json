{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Morphem\\\\Documents\\\\Proyecto-Final\\\\tcg-market\\\\src\\\\Components\\\\LoginComponent\\\\LoginView\\\\LoginView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from \"react-redux\";\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignInAlt, faEnvelope, faLock, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport { authenticateUser } from \"../../../Services/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [error, setError] = useState();\n  const [show, setShow] = useState(true);\n  const navigate = useNavigate();\n  const initialState = {\n    username: \"\",\n    password: \"\"\n  };\n  const [user, setUser] = useState(initialState);\n\n  const credentialChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const dispatch = useDispatch();\n\n  const validateUser = () => {\n    dispatch(authenticateUser(user.username, user.password)).then(response => {\n      if (response.status === 200) {\n        navigate(\"/home\");\n      } else if (response.status === 401) {\n        setError(\"Invalid username or password\");\n      }\n    }).catch(error => {\n      console.log(error.message);\n      setShow(true);\n      resetLoginForm();\n      setError(\"Invalid username and password\");\n    });\n  };\n\n  const resetLoginForm = () => {\n    setUser(initialState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"d-flex justify-content-md-center\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      xs: 5,\n      children: [show && props.message && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        onClose: () => setShow(false),\n        dismissible: true,\n        children: props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), show && error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        onClose: () => setShow(false),\n        dismissible: true,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"border border-dark  text-dark\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSignInAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), \" Login\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faEnvelope\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"text\",\n                  name: \"username\",\n                  value: user.username,\n                  onChange: credentialChange,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Introduce tu nombre de usuario\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faLock\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"password\",\n                  name: \"password\",\n                  value: user.password,\n                  onChange: credentialChange,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Introduce tu contrase\\xF1a\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            type: \"button\",\n            variant: \"success\",\n            onClick: validateUser,\n            disabled: user.username.length === 0 || user.password.length === 0,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSignInAlt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), \" Login\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            type: \"button\",\n            variant: \"info\",\n            onClick: resetLoginForm,\n            disabled: user.username.length === 0 && user.password.length === 0,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faUndo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), \" Reset\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"BgMb2ABxK9R34mV8tkkzb9WWkLk=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Morphem/Documents/Proyecto-Final/tcg-market/src/Components/LoginComponent/LoginView/LoginView.js"],"names":["React","useState","useNavigate","useDispatch","Card","Col","InputGroup","Row","Form","Button","Alert","FormControl","FontAwesomeIcon","faSignInAlt","faEnvelope","faLock","faUndo","authenticateUser","Login","props","error","setError","show","setShow","navigate","initialState","username","password","user","setUser","credentialChange","event","name","value","target","dispatch","validateUser","then","response","status","catch","console","log","message","resetLoginForm","textAlign","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from \"react-redux\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignInAlt, faEnvelope, faLock, faUndo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { authenticateUser } from \"../../../Services/index\";\r\n\r\nconst Login = (props) => {\r\n    const [error, setError] = useState();\r\n    const [show, setShow] = useState(true);\r\n    const navigate = useNavigate();\r\n    const initialState = {\r\n        username: \"\",\r\n        password: \"\",\r\n    };\r\n\r\n    const [user, setUser] = useState(initialState);\r\n\r\n    const credentialChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUser({ ...user, [name]: value });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const validateUser = () => {\r\n        dispatch(authenticateUser(user.username, user.password))\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    navigate(\"/home\");\r\n                }else if(response.status === 401){\r\n                    setError(\"Invalid username or password\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n                setShow(true);\r\n                resetLoginForm();\r\n                setError(\"Invalid username and password\");\r\n            });\r\n    };\r\n\r\n    const resetLoginForm = () => {\r\n        setUser(initialState);\r\n    };\r\n\r\n    return (\r\n        <Row className=\"d-flex justify-content-md-center\">\r\n            <Col xs={5}>\r\n                {show && props.message && (\r\n                    <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\r\n                        {props.message}\r\n                    </Alert>\r\n                )}\r\n                {show && error && (\r\n                    <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n                <Card className={\"border border-dark  text-dark\"}>\r\n                    <Card.Header>\r\n                        <FontAwesomeIcon icon={faSignInAlt} /> Login\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Form.Group as={Col}>\r\n                                <InputGroup>\r\n                                    <InputGroup>\r\n                                        <InputGroup.Text>\r\n                                            <FontAwesomeIcon icon={faEnvelope} />\r\n                                        </InputGroup.Text>\r\n                                    </InputGroup>\r\n                                    <FormControl\r\n                                        required\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        name=\"username\"\r\n                                        value={user.username}\r\n                                        onChange={credentialChange}\r\n                                        className={\"bg-dark text-white\"}\r\n                                        placeholder=\"Introduce tu nombre de usuario\"\r\n                                    />\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}>\r\n                                <InputGroup>\r\n                                    <InputGroup>\r\n                                        <InputGroup.Text>\r\n                                            <FontAwesomeIcon icon={faLock} />\r\n                                        </InputGroup.Text>\r\n                                    </InputGroup>\r\n                                    <FormControl\r\n                                        required\r\n                                        autoComplete=\"off\"\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        value={user.password}\r\n                                        onChange={credentialChange}\r\n                                        className={\"bg-dark text-white\"}\r\n                                        placeholder=\"Introduce tu contraseña\"\r\n                                    />\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                        </Row>\r\n                    </Card.Body>\r\n                    <Card.Footer style={{ textAlign: \"right\" }}>\r\n                        <Button\r\n                            size=\"sm\"\r\n                            type=\"button\"\r\n                            variant=\"success\"\r\n                            onClick={validateUser}\r\n                            disabled={user.username.length === 0 || user.password.length === 0}\r\n                        >\r\n                            <FontAwesomeIcon icon={faSignInAlt} /> Login\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            size=\"sm\"\r\n                            type=\"button\"\r\n                            variant=\"info\"\r\n                            onClick={resetLoginForm}\r\n                            disabled={user.username.length === 0 && user.password.length === 0}\r\n                        >\r\n                            <FontAwesomeIcon icon={faUndo} /> Reset\r\n                        </Button>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}