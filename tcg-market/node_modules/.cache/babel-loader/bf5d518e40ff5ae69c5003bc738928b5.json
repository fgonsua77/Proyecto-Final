{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fer\\\\Documents\\\\THE END\\\\Proyecto-Final\\\\tcg-market\\\\src\\\\Components\\\\CardsComponent\\\\CardInfoComponent\\\\CardInfo.js\",\n    _s = $RefreshSig$();\n\nimport './CardInfo.css';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardInfo = () => {\n  _s();\n\n  const {\n    cardId\n  } = useParams();\n  const [card, setCard] = useState({});\n  useEffect(() => {\n    fetch(`http://localhost:8080/apicartas/cartas/getCarta/${cardId}`).then(response => response.json()).then(card => setCard(card));\n  }, [cardId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardInfo\",\n    class: \"col-lg-3\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"left\",\n            src: card.imagen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: card.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"left\",\n        src: card.imagen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: card.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          className: \"list-group-flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [\"Codigo: \", card.codigo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [\"Precio: \", card.precio, \"\\u20AC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [\"Reprint: \", card.reprint === true ? card.reprint : 'Si' || card.reprint === false ? card.reprint : 'No']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [\"Palabras Clave: \", card.keywords]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [\"Descripcion: \", card.descripcion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [\"Texto: \", card.texto]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          className: \"d-flex flex-column\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"pt-2\",\n            href: \"\",\n            children: \"Comprar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CardInfo, \"bKH5NhjrmeOpF9RTV4sl+w2jzaw=\", false, function () {\n  return [useParams];\n});\n\n_c = CardInfo;\nexport default CardInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardInfo\");","map":{"version":3,"sources":["C:/Users/Fer/Documents/THE END/Proyecto-Final/tcg-market/src/Components/CardsComponent/CardInfoComponent/CardInfo.js"],"names":["useParams","useState","useEffect","Card","Button","ListGroupItem","ListGroup","Container","Row","Col","CardInfo","cardId","card","setCard","fetch","then","response","json","imagen","nombre","width","codigo","precio","reprint","keywords","descripcion","texto"],"mappings":"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","sourcesContent":["import './CardInfo.css';\r\nimport { useParams} from 'react-router-dom';\r\nimport { useState, useEffect, } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nconst CardInfo = () => {\r\n    const {cardId} = useParams();\r\n    const [card, setCard] = useState({});\r\n    useEffect(() => {\r\n        fetch(`http://localhost:8080/apicartas/cartas/getCarta/${cardId}`)\r\n        .then(response => response.json())\r\n        .then(card => setCard(card));\r\n    }, [cardId]);\r\n    \r\n    return (\r\n        <div className=\"cardInfo\" class=\"col-lg-3\">\r\n            <Container>\r\n                <Row>\r\n                    <Col><Card.Img variant=\"left\" src={card.imagen}/></Col>\r\n                    <Col><Card.Title>{card.nombre}</Card.Title></Col>\r\n                </Row>\r\n            </Container>\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Img variant=\"left\" src={card.imagen}/>\r\n                <Card.Body>\r\n                    <Card.Title>{card.nombre}</Card.Title>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                        <ListGroupItem>Codigo: {card.codigo}</ListGroupItem>\r\n                        <ListGroupItem>Precio: {card.precio}€</ListGroupItem>\r\n                        <ListGroupItem>Reprint: {\r\n                        card.reprint === true ? card.reprint : 'Si'|| card.reprint === false ? card.reprint : 'No'\r\n                        }</ListGroupItem>\r\n                        <ListGroupItem>Palabras Clave: {card.keywords}</ListGroupItem>\r\n                        <ListGroupItem>Descripcion: {card.descripcion}</ListGroupItem>\r\n                        <ListGroupItem>Texto: {card.texto}</ListGroupItem>\r\n                    </ListGroup>\r\n                    <Card.Footer className=\"d-flex flex-column\">\r\n                        <Button variant=\"primary\" className=\"pt-2\" href=\"\" >Comprar</Button>\r\n                    </Card.Footer>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardInfo;"]},"metadata":{},"sourceType":"module"}